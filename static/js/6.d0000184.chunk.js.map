{"version":3,"sources":["helper/fetchWrapper.js","helper/converter.js","pages/Home.js"],"names":["fetchWrapper","get","url","fetch","method","headers","then","handleResponse","post","body","requestOptions","JSON","stringify","put","delete","response","text","data","parse","ok","error","message","statusText","Promise","reject","convertToJson","keys","delim","reduce","initial","current","splitedData","split","obj","acc","key","index","useStyles","makeStyles","theme","root","columns","title","field","searchable","grouping","sorting","type","align","render","rowData","style","margin","moment","Number","timestamp","format","currencySetting","currencyCode","cellStyle","padding","Home","classes","useState","loading","setLoading","historicalData","setHistoricalData","currentPage","setCurrentPage","useEffect","process","catch","console","className","actions","icon","SyncIcon","tooltip","isFreeAction","onClick","event","prevState","options","maxBodyHeight","isLoading"],"mappings":"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","file":"static/js/6.d0000184.chunk.js","sourcesContent":["export const fetchWrapper = {\n  get,\n  post,\n  put,\n  delete: _delete,\n};\n\nfunction get(url) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n    },\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction post(url, body) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n    },\n    body: JSON.stringify(body),\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction put(url, body) {\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n    },\n    body: JSON.stringify(body),\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\n// prefixed with underscored because delete is a reserved word in javascript\nfunction _delete(url) {\n  const requestOptions = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n    },\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\n// helper functions\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n","export const convertToJson = (data, keys, delim = \",\") =>\n  data.reduce((initial, current) => {\n    const splitedData = current.split(delim);\n    const obj = keys.reduce(\n      (acc, key, index) => (acc = { ...acc, [key]: splitedData[index] }),\n      {}\n    );\n    return [...initial, obj];\n  }, []);\n","import React, { useEffect, useState } from \"react\";\nimport { fetchWrapper, convertToJson } from \"helper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppLoader, DataTable, AppContainer } from \"components\";\nimport moment from \"moment\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nconst columns = [\n  {\n    title: \"Date\",\n    field: \"timestamp\",\n    searchable: false,\n    grouping: false,\n    sorting: true,\n    type: \"date\",\n    align: \"center\",\n    render: (rowData) => (\n      <p style={{ margin: 0 }}>\n        {moment(Number(rowData.timestamp)).format(\"MMM DD, YYYY\")}\n      </p>\n    ),\n  },\n  {\n    title: \"Open Price\",\n    field: \"open\",\n    searchable: false,\n    grouping: false,\n    sorting: true,\n    type: \"currency\",\n    align: \"center\",\n    currencySetting: { currencyCode: \"INR\" },\n    cellStyle: {\n      padding: 5,\n    },\n  },\n  {\n    title: \"Highest Price\",\n    field: \"high\",\n    searchable: false,\n    grouping: false,\n    sorting: true,\n    type: \"currency\",\n    align: \"center\",\n    currencySetting: { currencyCode: \"INR\" },\n    cellStyle: {\n      padding: 5,\n    },\n  },\n  {\n    title: \"Lowest Price\",\n    field: \"low\",\n    searchable: false,\n    grouping: false,\n    sorting: true,\n    type: \"currency\",\n    align: \"center\",\n    currencySetting: { currencyCode: \"INR\" },\n    cellStyle: {\n      padding: 5,\n    },\n  },\n  {\n    title: \"Closed Price\",\n    field: \"close\",\n    searchable: false,\n    grouping: false,\n    sorting: true,\n    type: \"currency\",\n    align: \"center\",\n    currencySetting: { currencyCode: \"INR\" },\n    cellStyle: {\n      padding: 5,\n    },\n  },\n  {\n    title: \"Remaning Volume\",\n    field: \"volume\",\n    searchable: false,\n    grouping: false,\n    sorting: true,\n    type: \"numeric\",\n    align: \"center\",\n    cellStyle: {\n      padding: 5,\n    },\n  },\n];\n\nconst keys = [\"timestamp\", \"open\", \"high\", \"low\", \"close\", \"volume\"];\n\nfunction Home() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [historicalData, setHistoricalData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchWrapper\n      .get(`${process.env.REACT_APP_HISTORY_ENDPOINT}?interval=${currentPage}`)\n      .then((response) => {\n        setHistoricalData(convertToJson(response, keys));\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoading(false);\n      });\n  }, [currentPage]);\n\n  return (\n    <section className={classes.root}>\n      <AppContainer>\n        <DataTable\n          title=\"Historical Records\"\n          columns={columns}\n          data={historicalData}\n          actions={[\n            {\n              icon: SyncIcon,\n              tooltip: \"Fetch More Records\",\n              isFreeAction: true,\n              onClick: (event) => {\n                setCurrentPage((prevState) => prevState + 1);\n              },\n            },\n          ]}\n          options={{ maxBodyHeight: \"calc(100vh - 250px)\" }}\n        />\n      </AppContainer>\n\n      <AppLoader isLoading={loading} />\n    </section>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}