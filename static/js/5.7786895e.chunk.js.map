{"version":3,"sources":["helper/fetchWrapper.js","helper/converter.js","pages/LiveChart.js"],"names":["fetchWrapper","get","url","fetch","method","headers","then","handleResponse","post","body","requestOptions","JSON","stringify","put","delete","response","text","data","parse","ok","error","message","statusText","Promise","reject","convertToJson","keys","delim","reduce","initial","current","splitedData","split","obj","acc","key","index","clientSocket","socketIOClient","process","useStyles","makeStyles","theme","root","LiveChart","classes","useState","setLiveData","useEffect","emit","state","stoxData","on","callback","push","console","className"],"mappings":"sKAAO,IAAMA,EAAe,CAC1BC,IAMF,SAAaC,GAQX,OAAOC,MAAMD,EAPU,CACrBE,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,kBAAmB,mBAGWC,KAAKC,IAbvCC,KAgBF,SAAcN,EAAKO,GACjB,IAAMC,EAAiB,CACrBN,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,kBAAmB,iBAErBI,KAAME,KAAKC,UAAUH,IAEvB,OAAON,MAAMD,EAAKQ,GAAgBJ,KAAKC,IAxBvCM,IA2BF,SAAaX,EAAKO,GAChB,IAAMC,EAAiB,CACrBN,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,kBAAmB,iBAErBI,KAAME,KAAKC,UAAUH,IAEvB,OAAON,MAAMD,EAAKQ,GAAgBJ,KAAKC,IAnCvCO,OAuCF,SAAiBZ,GAQf,OAAOC,MAAMD,EAPU,CACrBE,OAAQ,SACRC,QAAS,CACP,eAAgB,mBAChB,kBAAmB,mBAGWC,KAAKC,KAKzC,SAASA,EAAeQ,GACtB,OAAOA,EAASC,OAAOV,MAAK,SAACU,GAC3B,IAAMC,EAAOD,GAAQL,KAAKO,MAAMF,GAEhC,IAAKD,EAASI,GAAI,CAChB,IAAMC,EAASH,GAAQA,EAAKI,SAAYN,EAASO,WACjD,OAAOC,QAAQC,OAAOJ,GAGxB,OAAOH,K,+BCjEEQ,EAAgB,SAACR,EAAMS,GAAP,IAAaC,EAAb,uDAAqB,IAArB,OAC3BV,EAAKW,QAAO,SAACC,EAASC,GACpB,IAAMC,EAAcD,EAAQE,MAAML,GAC5BM,EAAMP,EAAKE,QACf,SAACM,EAAKC,EAAKC,GAAX,OAAyB,2BAAQF,GAAR,kBAAcC,EAAMJ,EAAYK,OACzD,IAEF,MAAM,GAAN,mBAAWP,GAAX,CAAoBI,MACnB,M,sICFCI,EAAeC,IAAeC,gCAE9Bb,EAAO,CAAC,YAAa,OAAQ,OAAQ,MAAO,QAAS,UAErDc,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,OAmCOC,UAhCf,WACE,IAAMC,EAAUL,IADG,EAEaM,mBAAS,IAFtB,mBAEFC,GAFE,WAuBnB,OAnBAC,qBAAU,WACRX,EAAaY,KAAK,MAAO,CAAEC,OAAO,IAElC,IAAMC,EAAW,GAWjB,OAVAd,EAAae,GAAG,QAAQ,SAAUnC,EAAMoC,GACtCF,EAASG,KAAKrC,GACd8B,EAAYtB,YAAc0B,EAAUzB,IACpC2B,EAAS,MAGXhB,EAAae,GAAG,SAAS,SAAUhC,GACjCmC,QAAQnC,MAAM,UAAYA,MAGrB,kBAAMiB,EAAaY,KAAK,QAAS,CAAEC,OAAO,OAChD,IAKD,6BAASM,UAAWX,EAAQF,MAC1B,kBAAC,IAAD,KACE","file":"static/js/5.7786895e.chunk.js","sourcesContent":["export const fetchWrapper = {\n  get,\n  post,\n  put,\n  delete: _delete,\n};\n\nfunction get(url) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n    },\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction post(url, body) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n    },\n    body: JSON.stringify(body),\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction put(url, body) {\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n    },\n    body: JSON.stringify(body),\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\n// prefixed with underscored because delete is a reserved word in javascript\nfunction _delete(url) {\n  const requestOptions = {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Accept-Encoding\": \"gzip, deflate\",\n    },\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\n// helper functions\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n","export const convertToJson = (data, keys, delim = \",\") =>\n  data.reduce((initial, current) => {\n    const splitedData = current.split(delim);\n    const obj = keys.reduce(\n      (acc, key, index) => (acc = { ...acc, [key]: splitedData[index] }),\n      {}\n    );\n    return [...initial, obj];\n  }, []);\n","import React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppContainer } from \"components\";\nimport { convertToJson } from \"helper\";\n\nconst clientSocket = socketIOClient(process.env.REACT_APP_LIVE_CHART_ENDPOINT);\n\nconst keys = [\"timestamp\", \"open\", \"high\", \"low\", \"close\", \"volume\"];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nfunction LiveChart() {\n  const classes = useStyles();\n  const [liveData, setLiveData] = useState([]);\n\n  useEffect(() => {\n    clientSocket.emit(\"sub\", { state: true });\n\n    const stoxData = [];\n    clientSocket.on(\"data\", function (data, callback) {\n      stoxData.push(data);\n      setLiveData(convertToJson(stoxData, keys));\n      callback(1);\n    });\n\n    clientSocket.on(\"error\", function (error) {\n      console.error(\"Error: \" + error);\n    });\n\n    return () => clientSocket.emit(\"unsub\", { state: false });\n  }, []);\n\n  //console.log({ liveData });\n\n  return (\n    <section className={classes.root}>\n      <AppContainer>\n        <p>LiveChart</p>\n      </AppContainer>\n    </section>\n  );\n}\n\nexport default LiveChart;\n"],"sourceRoot":""}