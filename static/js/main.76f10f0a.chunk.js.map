{"version":3,"sources":["components/ErrorBoundary.js","components/AppLoader.js","components/DataTable.js","components/AppContainer.js","components/Sidebar.js","components/Header.js","images/logo.svg","App.js","theme.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","state","hasError","_","errorInfo","console","log","classes","this","Fragment","CssBaseline","className","root","errorText","children","error","message","React","Component","withStyles","theme","backgroundColor","height","display","justifyContent","alignItems","color","margin","lineHeight","fontSize","withTheme","useStyles","makeStyles","backdrop","zIndex","drawer","AppLoader","isLoading","Backdrop","open","CircularProgress","defaultProps","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","DataTable","options","rest","icons","pageSize","pageSizeOptions","headerStyle","whiteSpace","rowStyle","draggable","toolbar","search","flexDirection","header","flex","width","mainContent","overflow","sidebar","content","padding","AppContainer","useTheme","matches","useMediaQuery","breakpoints","down","useState","isOpenSideBar","setIsOpenSideBar","useEffect","toggleSideBar","useCallback","prevState","sidebarContainer","item","sidebarNav","icon","transition","itemLink","borderLeft","textDecoration","palette","common","white","selected","borderColor","itemText","listIcon","minWidth","Sidebar","List","component","ListItem","exact","to","activeClassName","ListItemIcon","ListItemText","primary","logo","maxWidth","left","link","menu","marginRight","Header","IconButton","onClick","src","Logo","alt","module","exports","Home","lazy","LiveChart","NotFound","App","path","createMuiTheme","typography","fontFamily","join","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","MainApp","fallback","ThemeProvider","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.76f10f0a.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst styles = (theme) => ({\n  root: {\n    backgroundColor: \"#dcdfce\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  errorText: {\n    color: \"#333\",\n    margin: 0,\n    lineHeight: 1.5,\n    fontSize: 24,\n  },\n});\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    console.log(error.message);\n    return { hasError: true };\n  }\n\n  componentDidCatch(_, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(errorInfo);\n  }\n\n  render() {\n    const { classes } = this.props;\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <React.Fragment>\n          <CssBaseline />\n          <div className={classes.root}>\n            <h1 className={classes.errorText}>Something went wrong.</h1>\n          </div>\n        </React.Fragment>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(ErrorBoundary);\n","import React from \"react\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nexport const AppLoader = ({ isLoading }) => {\n  const classes = useStyles();\n\n  return (\n    <Backdrop className={classes.backdrop} open={isLoading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nAppLoader.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n};\n\nAppLoader.defaultProps = {\n  isLoading: false,\n};\n\nexport default AppLoader;\n","import React, { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport PropTypes from \"prop-types\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};\nconst DataTable = ({ options, ...rest }) => {\n  return (\n    <div className=\"data-table\">\n      <MaterialTable\n        icons={tableIcons}\n        options={{\n          pageSize: 10,\n          pageSizeOptions: [10, 20, 30],\n          headerStyle: {\n            whiteSpace: \"nowrap\",\n            color: \"#9FA2B4\",\n            fontSize: 14,\n          },\n          rowStyle: {\n            whiteSpace: \"nowrap\",\n            color: \"#000\",\n            fontSize: 14,\n          },\n          draggable: false,\n          toolbar: true,\n          search: false,\n          ...options,\n        }}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nDataTable.propTypes = {\n  options: PropTypes.object,\n};\n\nexport default DataTable;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Sidebar, Header } from \"components\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    flexDirection: \"column\",\n    backgroundColor: \"#dcdfce\",\n  },\n  header: {\n    flex: \"0 0 70px\",\n    width: \"100%\",\n  },\n  mainContent: {\n    flex: \"0 0 calc(100vh - 70px)\",\n    overflow: \"hidden\",\n    display: \"flex\",\n    width: \"100%\",\n  },\n  sidebar: {\n    flex: \"0 0 300px\",\n  },\n  content: {\n    flex: 1,\n    padding: 30,\n    overflow: \"auto\",\n  },\n}));\n\nconst AppContainer = ({ children }) => {\n  const theme = useTheme();\n  const matches = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const [isOpenSideBar, setIsOpenSideBar] = useState(true);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (matches) setIsOpenSideBar(false);\n    else setIsOpenSideBar(true);\n  }, [matches]);\n\n  const toggleSideBar = useCallback(\n    () => setIsOpenSideBar((prevState) => !prevState),\n    []\n  );\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Header toggleSideBar={toggleSideBar} />\n      </div>\n      <div className={classes.mainContent}>\n        {isOpenSideBar && (\n          <div className={classes.sidebar}>\n            <Sidebar />\n          </div>\n        )}\n\n        <div className={classes.content}>{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AppContainer;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { NavLink } from \"react-router-dom\";\nimport HistoryIcon from \"@material-ui/icons/History\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\n\nconst useStyles = makeStyles((theme) => ({\n  sidebarContainer: {\n    backgroundColor: \"#091f34\",\n    height: \"100%\",\n  },\n  item: {\n    padding: 0,\n  },\n  sidebarNav: {\n    padding: 0,\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, .7)\",\n    transition: \"all .2s linear\",\n  },\n  itemLink: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\",\n    padding: \"16px 16px 16px 30px\",\n    borderLeft: \"3px solid transparent\",\n    textDecoration: \"none\",\n    color: \"rgba(255, 255, 255, .7)\",\n    transition: \"all .2s linear\",\n    \"&:hover\": {\n      backgroundColor: \"#1b2a46\",\n      color: theme.palette.common.white,\n      \"& svg\": {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n  selected: {\n    backgroundColor: \"#1b2a46\",\n    borderColor: theme.palette.common.white,\n    color: theme.palette.common.white,\n    \"& svg\": {\n      color: theme.palette.common.white,\n    },\n  },\n  itemText: {\n    margin: 0,\n  },\n  listIcon: {\n    minWidth: 40,\n  },\n}));\n\nconst Sidebar = () => {\n  const classes = useStyles();\n\n  return (\n    <aside className={classes.sidebarContainer}>\n      <List component=\"nav\" className={classes.sidebarNav}>\n        <ListItem className={classes.item}>\n          <NavLink\n            exact\n            to=\"/\"\n            activeClassName={classes.selected}\n            className={classes.itemLink}\n          >\n            <ListItemIcon className={classes.listIcon}>\n              <HistoryIcon className={classes.icon} />\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Historical Records\"\n              className={classes.itemText}\n            />\n          </NavLink>\n        </ListItem>\n        <ListItem className={classes.item}>\n          <NavLink\n            exact\n            to=\"/explore\"\n            activeClassName={classes.selected}\n            className={classes.itemLink}\n          >\n            <ListItemIcon className={classes.listIcon}>\n              <TimelineIcon className={classes.icon} />\n            </ListItemIcon>\n            <ListItemText primary=\"Live Chart\" className={classes.itemText} />\n          </NavLink>\n        </ListItem>\n      </List>\n    </aside>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Logo } from \"images\";\nimport { Link } from \"react-router-dom\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { IconButton } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    padding: \"11px 30px\",\n    backgroundColor: \"#091f34\",\n  },\n  logo: {\n    maxWidth: 100,\n  },\n  left: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  link: {\n    display: \"inline-flex\",\n  },\n  menu: {\n    color: theme.palette.common.white,\n    marginRight: 20,\n  },\n}));\n\nconst Header = ({ toggleSideBar }) => {\n  const classes = useStyles();\n  return (\n    <header className={classes.root}>\n      <div className={classes.left}>\n        <IconButton className={classes.menu} onClick={toggleSideBar}>\n          <MenuIcon />\n        </IconButton>\n        <Link to=\"/\" className={classes.link}>\n          <img src={Logo} alt=\"Logo\" className={classes.logo} />\n        </Link>\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  toggleSideBar: PropTypes.func,\n};\n\nexport default Header;\n","module.exports = __webpack_public_path__ + \"static/media/logo.552e0ee3.svg\";","import React, { lazy } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nconst Home = lazy(() => import(\"pages/Home\"));\nconst LiveChart = lazy(() => import(\"pages/LiveChart\"));\nconst NotFound = lazy(() => import(\"pages/NotFound\"));\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/explore\">\n        <LiveChart />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['\"IBM Plex Sans\"', \"sans-serif\"].join(\",\"),\n  },\n});\n\nexport default theme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"App\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { HashRouter } from \"react-router-dom\";\nimport theme from \"theme\";\nimport * as serviceWorker from \"serviceWorker\";\nimport { ErrorBoundary } from \"components\";\nimport { AppLoader } from \"components\";\n\nconst MainApp = (\n  <ErrorBoundary>\n    <Suspense fallback={<AppLoader isLoading />}>\n      <ThemeProvider theme={theme}>\n        <HashRouter>\n          <CssBaseline />\n          <App />\n        </HashRouter>\n      </ThemeProvider>\n    </Suspense>\n  </ErrorBoundary>\n);\n\nReactDOM.render(MainApp, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}